@using Fen_Test.Web.Areas.App.Views.MyCustom.Components.Pages
@model MyViewModel


       
    <li>

        <a class="m-menu__link1 " data-test="@Model.Id"
           role="menuitem"
           aria-haspopup="true"
           aria-expanded="false"
           tabindex="-1">
            <i class="m-menu__link-icon @Model.icon"></i>
            <span class="m-menu__link-text">
                <span class="title">@Model.names</span>
            </span>

        </a>
        @*<button class="m-menu__link1 " data-test="@Model.Id"
               role="menuitem"
               aria-haspopup="true"
               aria-expanded="false"
               tabindex="-1">
                <i class="m-menu__link-icon @Model.icon"></i>
                <span class="m-menu__link-text">
                    <span class="title">@Model.names</span>
                </span>

            </button>*@
    </li>





    @*@using Abp.Collections.Extensions
        @using Fen_Test.Web.Areas.App.Views.Shared.Components.AppMenu
        @model UserMenuItemViewModel
        <li class="m-menu__item m-menu__item--submenu"
            aria-haspopup="true"
            @(Model.RootLevel ? "" : " role=none")
            data-menu-submenu-toggle="hover">
            @if (Model.MenuItem.Items.IsNullOrEmpty())
            {
                if (string.IsNullOrEmpty(Model.MenuItem.Target))
                {
                    Model.MenuItem.Target = "_self";
                }
                <a class="m-menu__link" onclick="testFunction(this)" data-test="@Model.MenuItem.CalculateUrl(ApplicationPath)"
                   role="menuitem"
                   aria-haspopup="true"
                   aria-expanded="false"
                   tabindex="@(Model.MenuItemIndex==0 ? "0" : "-1")">
                    <i class="m-menu__link-icon @Model.MenuItem.Icon"></i>
                    <span class="m-menu__link-text">
                        <span class="title">@Model.MenuItem.DisplayName</span>
                    </span>
                </a>
            }
            else
            {
                <a href="#" class="m-menu__link m-menu__toggle"
                   role="menuitem"
                   aria-haspopup="true"
                   aria-expanded="false"
                   tabindex="@(Model.MenuItemIndex==0 ? "0" : "-1")">
                    <i class="m-menu__link-icon @Model.MenuItem.Icon"></i>
                    <span class="m-menu__link-text">
                        <span class="title">@Model.MenuItem.DisplayName</span>
                    </span>
                    <i class="m-menu__ver-arrow la la-angle-right"></i>
                </a>
                <nav class="m-menu__submenu" aria-label="@Model.MenuItem.DisplayName">
                    <span class="m-menu__arrow"></span>
                    <ul class="m-menu__subnav"
                        role="menu"
                        aria-label="@Model.MenuItem.DisplayName">
                        @for (var i = 0; i < Model.MenuItem.Items.Count; i++)
                        {
                            var childMenuItem = Model.MenuItem.Items[i];
                            if (!childMenuItem.IsVisible)
                            {
                                continue;
                            }
                            @Html.Partial("_MyCustomView", new UserMenuItemViewModel
                               {
                                   MenuItem = childMenuItem,
                                   MenuItemIndex = i,
                                   CurrentPageName = Model.CurrentPageName,
                                   RootLevel = false
                               })
                        }
                    </ul>
                </nav>
            }
        </li>
        <div id="searchResults"></div>*@
    @*<script type="text/javascript">


            function testFunction(obj) {
                var tst = $(obj).attr('data-test');
                //alert(tst);
                $("#searchResults").load("@(Url.Action("MyCustomSideBar", "MyCustom"))", { name: tst});
                }
        </script>*@